/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/GD3dR5xlSZD
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Rubik } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

rubik({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"

export function Component() {
  const [name, setName] = useState("")
  const [images, setImages] = useState([])
  const handleSubmit = async (e) => {
    e.preventDefault()
    try {
      const response = await fetch("YOUR_API_URL", {
        headers: {
          "Content-Type": "application/json",
        },
      })
      const data = await response.json()
      setImages(data.results.map((result) => result.urls.regular))
    } catch (error) {
      console.error("Error fetching images:", error)
    }
  }
  return (
    <div className="max-w-4xl mx-auto p-6 sm:p-8 md:p-10">
      <div className="flex flex-col items-center justify-center gap-8">
        <h1 className="text-3xl font-bold">Search for Images</h1>
        <form onSubmit={handleSubmit} className="w-full max-w-md">
          <div className="space-y-4">
            <div>
              <Label htmlFor="name">Name</Label>
              <Input
                id="name"
                type="text"
                value={name}
                onChange={(e) => setName(e.target.value)}
                placeholder="Enter a name"
                required
              />
            </div>
            <Button type="submit" className="w-full">
              Search
            </Button>
          </div>
        </form>
        {images.length > 0 && (
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
            {images.map((imageUrl, index) => (
              <img
                key={index}
                src="/placeholder.svg"
                alt={`Image ${index}`}
                width={400}
                height={400}
                className="object-cover w-full h-64 rounded-lg"
                style={{ aspectRatio: "400/400", objectFit: "cover" }}
              />
            ))}
          </div>
        )}
      </div>
    </div>
  )
}
